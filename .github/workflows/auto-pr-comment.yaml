# Workflow to add automated comment in pull request

name: Add Pull Request Comment

# Controls when the workflow will run
on:
  pull_request_review:
    types: [submitted]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
    GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pr-comment"
  pr-comment:
    if: github.event.review.state == 'approved'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
     
      - name: Set the value
        run: |
         echo "GITHUB_PR_NUMBER=$(echo $GITHUB_REF | cut -d'/' -f3)" >> $GITHUB_ENV
      - name: Use the value
        run: |
         echo "${{ env.GITHUB_PR_NUMBER }}"
         
         # Generate Commit Message
      - name: Generate commit message from last comment and merge pull request
        run: |
          echo "**Note:** _Please ensure to copy-paste the below message while merging this pull request. Failing to do this will block the pull request merge operation_" >> COMMIT_MESSAGE
          cat COMMIT_MESSAGE_TEMPLATE.md >> COMMIT_MESSAGE
          echo -e "- Author: $(gh pr view ${{ env.GITHUB_PR_NUMBER }} --json author --jq .author.login)" >> COMMIT_MESSAGE
          echo -e "- Assignee: $(gh pr view ${{ env.GITHUB_PR_NUMBER }} --json assignees | jq -r '[.assignees[].login ] | @csv')" >> COMMIT_MESSAGE
          echo -e "- Reviewers: $(gh pr view ${{ env.GITHUB_PR_NUMBER }} --json reviews | jq -r '[.reviews[].author.login] | @csv')" >> COMMIT_MESSAGE      

      # Merge Pull Request 
      - name: Add comment in pull request
        run: gh pr comment ${{ env.GITHUB_PR_NUMBER }} -F COMMIT_MESSAGE
